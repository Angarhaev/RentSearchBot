from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from database import DatabaseCommands
from utils import EasyFunc
from my_keyboards import KeyboardRunCreate
from states.states import AlSettings


router_run_mes = Router()


@router_run_mes.message(F.text == "üè†", F.text == "/swipe")
async def lets_find(message: Message, state: FSMContext):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–¥–Ω–∏–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ reply –∫–Ω–æ–ø–∫—É —Å –¥–æ–º–∏–∫–æ–º"""
    await message.delete()
    keyboards_adv = await KeyboardRunCreate.keyboards_adv()
    keyboard_back = await KeyboardRunCreate.keyboard_back()
    await state.update_data(keyboards_adv=keyboards_adv)
    await state.update_data(keyboard_back=keyboard_back)
    adv_to_mes = await DatabaseCommands.select_not_viewed_adv_cache(message.from_user.id)
    if adv_to_mes:
        media = await EasyFunc.links_images(adv_to_mes[0].images.split(', '))
        await state.update_data(media=media)

        await message.bot.send_photo(chat_id=message.chat.id, photo=adv_to_mes[0].images.split(', ')[0],
                                     caption=f"–ö–≤–∞—Ä—Ç–∏—Ä–∞, {adv_to_mes[0].district} —Ä–∞–π–æ–Ω,\n\n"
                                             f"<b>–¶–µ–Ω–∞: {adv_to_mes[0].price}</b>\n\n"
                                             f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç: {adv_to_mes[0].rooms},\n"
                                             f"–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å: {adv_to_mes[0].square},\n"
                                             f"–≠—Ç–∞–∂: {adv_to_mes[0].floor},\n"
                                             f"–ú–µ–±–µ–ª—å: {adv_to_mes[0].furniture},\n"
                                             f"–†–µ–º–æ–Ω—Ç: {adv_to_mes[0].repair},\n"
                                             f"–¢–µ–ª–µ—Ñ–æ–Ω: {adv_to_mes[0].phone},\n"
                                             f"–ê–¥—Ä–µ—Å: {adv_to_mes[0].address},\n\n"
                                             f"–û–ø–∏—Å–∞–Ω–∏–µ:{adv_to_mes[0].description}\n"
                                             f"\n<i>–∞–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞ {adv_to_mes[0].date_adv}</i>\n"
                                             f"–ò—Å—Ç–æ—á–Ω–∏–∫: {adv_to_mes[0].url}", parse_mode='HTML',
                                     reply_markup=keyboards_adv)
    else:

        await message.answer('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞',
                             reply_markup=keyboard_back)

    await state.set_state(AlSettings.adv_showed)


@router_run_mes.callback_query(StateFilter(AlSettings.adv_showed, AlSettings.adv_showed_photos,
                                           AlSettings.start, AlSettings.settings,
                                           None), F.data.in_({'/next_apart', '/run'}))
@router_run_mes.callback_query(StateFilter(AlSettings.update, AlSettings.finish_start_settings, AlSettings.start),
                               F.data == '/run')
async def gimme_one_mes(callback: CallbackQuery, state: FSMContext):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–Ω–æ–ø–∫–∏"""
    keyboards_adv = await KeyboardRunCreate.keyboards_adv()
    keyboard_back = await KeyboardRunCreate.keyboard_back()
    await state.update_data(keyboards_adv=keyboards_adv)
    await state.update_data(keyboard_back=keyboard_back)

    adv_to_mes = await DatabaseCommands.select_not_viewed_adv_cache(callback.from_user.id)
    if adv_to_mes:
        media = await EasyFunc.links_images(adv_to_mes[0].images.split(', '))
        await state.update_data(media=media)

        await callback.bot.send_photo(chat_id=callback.message.chat.id, photo=adv_to_mes[0].images.split(', ')[0],
                                      caption=f"–ö–≤–∞—Ä—Ç–∏—Ä–∞, {adv_to_mes[0].district} —Ä–∞–π–æ–Ω,\n\n"
                                              f"<b>–¶–µ–Ω–∞: {adv_to_mes[0].price}</b>\n\n"
                                              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç: {adv_to_mes[0].rooms},\n"
                                              f"–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å: {adv_to_mes[0].square},\n"
                                              f"–≠—Ç–∞–∂: {adv_to_mes[0].floor},\n"
                                              f"–ú–µ–±–µ–ª—å: {adv_to_mes[0].furniture},\n"
                                              f"–†–µ–º–æ–Ω—Ç: {adv_to_mes[0].repair},\n"
                                              f"–¢–µ–ª–µ—Ñ–æ–Ω: {adv_to_mes[0].phone},\n"
                                              f"–ê–¥—Ä–µ—Å: {adv_to_mes[0].address},\n\n"
                                              f"–û–ø–∏—Å–∞–Ω–∏–µ:{adv_to_mes[0].description}\n"
                                              f"\n<i>–∞–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞ {adv_to_mes[0].date_adv}</i>\n"
                                              f"–ò—Å—Ç–æ—á–Ω–∏–∫: {adv_to_mes[0].url}", parse_mode='HTML',
                                      reply_markup=keyboards_adv)
    else:
        await callback.message.answer('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞',
                                      reply_markup=keyboard_back)
    await state.set_state(AlSettings.adv_showed)


@router_run_mes.callback_query(StateFilter(AlSettings.adv_showed), F.data == '/more')
async def more_photo(callback: CallbackQuery, state: FSMContext):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∫–≤–∞—Ä—Ç–∏—Ä—ã"""
    keyboards_adv_more = await KeyboardRunCreate.keyboards_adv_more()
    get_dict = await state.get_data()
    media = get_dict['media']
    if len(media) == 1:
        await callback.message.answer('–ê—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é',
                                      reply_markup=keyboards_adv_more)
    else:
        await callback.bot.send_media_group(callback.message.chat.id, media=media)
        await callback.message.answer('–ï—Å—Ç—å –µ—â–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã',
                                      reply_markup=keyboards_adv_more)

    await state.set_state(AlSettings.adv_showed_photos)


@router_run_mes.callback_query(StateFilter(AlSettings.adv_showed, None), F.data == '/delete')
async def delete_message(callback: CallbackQuery, state: FSMContext):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º"""
    await callback.bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    await state.set_state(AlSettings.adv_showed)


@router_run_mes.callback_query(StateFilter(AlSettings.adv_showed_photos, None), F.data == '/delete')
async def delete_message_media(callback: CallbackQuery, state: FSMContext):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏"""
    await callback.bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    get_dict = await state.get_data()
    media = get_dict['media']
    for i in range(1, len(media)+1):
        await callback.bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id - i)
    await state.set_state(AlSettings.adv_showed)
